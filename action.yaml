name: 'Hello World'
description: 'Greet someone'
inputs:
  package-manager:
    description: 'Python package manager. Pip is default'
    required: false
    default: 'pip'
  requirements-file:
    description: 'Path to the requirements file if you use pip. ./requirements.txt by default'
    required: false
    default: './requirements.txt'
  pytest-root-dir:
    description: 'root directory to recursively search for .py files'
    required: false
    default: '.'
  pytest-tests-dir:
    description: 'directory with pytest tests. if left empty will identify test(s) dir by default'
    required: false
    default: './'
  cov-omit-list:
    description: 'list of directories and/or files to ignore'
    required: false
    default: ''
  cov-threshold-single:
    description: 'fail if any single file coverage is less than threshold'
    required: false
    default: 0
  cov-threshold-total:
    description: 'fail if the total coverage is less than threshold'
    required: false
    default: 0
outputs:
  output-table: # id of output
    description: 'pytest-cov markdown output table'
  cov-threshold-single-fail:
    description: 'boolean if any single file coverage less than cov-threshold-single'
  cov-threshold-total-fail:
    description: 'boolean if total coverage less than cov-threshold-total'
runs:
  using: "composite"
  steps:
    - id: copy-coverage-processor
      run: cp ${{ github.action_path }}/coverage_processor.py .
      shell: bash
    - id: run-tests
      run: |
        ${{ github.action_path }}/entrypoint.sh \
        "${{ inputs.package-manager }}" \
        "${{ inputs.requirements-file }}" \
        "${{ inputs.pytest-root-dir }}" \
        "${{ inputs.pytest-tests-dir }}" \
        "${{ inputs.cov-omit-list }}" \
        ${{ inputs.cov-threshold-single }} \
        ${{ inputs.cov-threshold-total }} \
      shell: bash
    - id: check-threashold
      run: |
      if [ -z "${{ steps.coverage.outputs.cov-threshold-single-fail }}" ]; then
        echo "cov single fail ${{ steps.coverage.outputs.cov-threshold-single-fail }}"
        exit 1
      elif [ -z "${{ steps.coverage.outputs.cov-threshold-total-fail }}" ]; then
        echo "cov single fail ${{ steps.coverage.outputs.cov-threshold-total-fail }}"
        exit 1
      fi
      shell: bash
    - uses: peter-evans/commit-comment@v1
      with:
        body: ${{ steps.coverage.outputs.output-table }}